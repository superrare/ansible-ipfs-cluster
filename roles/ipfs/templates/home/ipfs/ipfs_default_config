{
  "Identity": {
    "PeerID": "{{ ipfs_peer_id }}",
    "PrivKey": "{{ ipfs_private_key }}"
  },
  "Datastore": {
    "StorageMax": "{{ ipfs_storage_max }}",
    "StorageGCWatermark": {{ ipfs_gc_watermwark | default(90) }},
    "BloomFilterSize": {{ ipfs_bloom_filter_size }},
    "GCPeriod": "{{ ipfs_gc_period | default('1h') }}",
    "HashOnRead": false,
{% if ipfs_use_badger | default(False) %}
    "Spec": {
      "child": {
	"path": "badgerds",
	"syncWrites": {{ ipfs_disk_sync | default(True) | to_json }},
	"truncate": true,
	"type": "badgerds"
      },
      "prefix": "badger.datastore",
      "type": "measure"
    }
{% else %}
    "Spec": {
      "mounts": [
	{
	  "child": {
	    "path": "blocks",
	    "shardFunc": "/repo/flatfs/shard/v1/next-to-last/2",
	    "sync": {{ ipfs_disk_sync | default(True) | to_json }},
	    "type": "flatfs"
	  },
	  "mountpoint": "/blocks",
	  "prefix": "flatfs.datastore",
	  "type": "measure"
	},
	{
	  "child": {
	    "compression": "none",
	    "path": "datastore",
	    "type": "levelds"
	  },
	  "mountpoint": "/",
	  "prefix": "leveldb.datastore",
	  "type": "measure"
	}
      ],
      "type": "mount"
    }
{% endif %}
  },
  "Addresses": {
    "API": "{{ ipfs_api_listen | default('/ip4/127.0.0.1/tcp/5001') }}",
    "Announce": {{ ipfs_announce | default([]) | to_nice_json(indent=2) | indent(4) }},
    "Gateway": "{{ ipfs_address_gateway }}",
    "NoAnnounce": [
{% if ipfs_no_announce is defined %}
  {% for p in ipfs_no_announce %}
      "{{ p }}"{% if not loop.last %},{% endif %}
  {% endfor %}
{% else %}
      "/ip4/100.64.0.0/ipcidr/10",
      "/ip4/169.254.0.0/ipcidr/16",
      "/ip4/172.16.0.0/ipcidr/12",
      "/ip4/192.0.0.0/ipcidr/24",
      "/ip4/192.0.0.0/ipcidr/29",
      "/ip4/192.0.0.8/ipcidr/32",
      "/ip4/192.0.0.170/ipcidr/32",
      "/ip4/192.0.0.171/ipcidr/32",
      "/ip4/192.0.2.0/ipcidr/24",
      "/ip4/192.168.0.0/ipcidr/16",
      "/ip4/198.18.0.0/ipcidr/15",
      "/ip4/198.51.100.0/ipcidr/24",
      "/ip4/203.0.113.0/ipcidr/24",
      "/ip4/240.0.0.0/ipcidr/4",
      "/ip6/100::/ipcidr/64",
      "/ip6/2001:2::/ipcidr/48",
      "/ip6/2001:db8::/ipcidr/32",
      "/ip6/fc00::/ipcidr/7",
      "/ip6/fe80::/ipcidr/10"
{% endif %}
    ],
    "Swarm": [
      "/ip4/0.0.0.0/tcp/4001",
      "/ip4/0.0.0.0/tcp/4002/ws",
      "/ip4/0.0.0.0/udp/4001/quic",
      "/ip6/::/tcp/4001",
      "/ip6/::/udp/4001/quic",
      "/ip6/::/tcp/4002/ws"
    ]
  },
  "Mounts": {
    "IPFS": "/ipfs",
    "IPNS": "/ipns",
    "FuseAllowOther": false
  },
  "Discovery": {
    "MDNS": {
      "Enabled": {{ ipfs_discovery | default(False) | to_json }},
      "Interval": 10
    }
  },
  "Routing": {
    "Type": "{{ ipfs_routing | default('dht') }}"
  },
  "Ipns": {
    "RepublishPeriod": "",
    "RecordLifetime": "",
    "ResolveCacheSize": 128
  },
  "Bootstrap": [
    "/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb",
    "/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt",
    "/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
    "/ip4/104.131.131.82/udp/4001/quic/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
    "/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN",
    "/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa"
  ],
  "Gateway": {
    "HTTPHeaders": {
      "Access-Control-Allow-Headers": [
	"X-Requested-With",
	"Range",
	"User-Agent"
      ],
      "Access-Control-Allow-Methods": [
	"GET"
      ],
      "Access-Control-Allow-Origin": [
	"*"
      ]
    },
    "RootRedirect": "{{ ipfs_gateway_root_redirect | default('') }}",
    "Writable": false,
    "PathPrefixes": [],
    "APICommands": [],
    "NoFetch": false,
    "NoDNSLink": false,
    "PublicGateways": {{ ipfs_public_gateways | default(None) | to_nice_json(indent=2) | indent(6) }}
  },
  "API": {
    "HTTPHeaders": {}
  },
  "Swarm": {
    "DisableBandwidthMetrics": {{ ipfs_disable_bandwidth_metrics | default(False) | lower }},
    "DisableNatPortMap": true,
    "DisableRelay": {{ ipfs_disable_relay | default(False) | lower }},
    "EnableAutoNATService": false,
    "EnableAutoRelay": false,
    "EnableRelayHop": false,
    "Transports": {
      "Network": {},
      "Security": {},
      "Multiplexers": {}
    },
    "AddrFilters": [
{% if ipfs_addr_filters is defined %}
  {% for p in ipfs_addr_filters  %}
      "{{ p }}"{% if not loop.last %},{% endif %}
  {% endfor %}
{% else %}
      "/ip4/10.0.0.0/ipcidr/8",
      "/ip4/100.64.0.0/ipcidr/10",
      "/ip4/169.254.0.0/ipcidr/16",
      "/ip4/172.16.0.0/ipcidr/12",
      "/ip4/192.0.0.0/ipcidr/24",
      "/ip4/192.0.0.0/ipcidr/29",
      "/ip4/192.0.0.8/ipcidr/32",
      "/ip4/192.0.0.170/ipcidr/32",
      "/ip4/192.0.0.171/ipcidr/32",
      "/ip4/192.0.2.0/ipcidr/24",
      "/ip4/192.168.0.0/ipcidr/16",
      "/ip4/198.18.0.0/ipcidr/15",
      "/ip4/198.51.100.0/ipcidr/24",
      "/ip4/203.0.113.0/ipcidr/24",
      "/ip4/240.0.0.0/ipcidr/4",
      "/ip6/100::/ipcidr/64",
      "/ip6/2001:2::/ipcidr/48",
      "/ip6/2001:db8::/ipcidr/32",
      "/ip6/fc00::/ipcidr/7",
      "/ip6/fe80::/ipcidr/10"
{% endif %}
    ],
    "ConnMgr": {
      "GracePeriod": "20s",
      "HighWater": {{ ipfs_connmgr_high_water | default(2000) }},
      "LowWater": {{ ipfs_connmgr_low_water | default(1500) }},
      "Type": "basic"
    }
  },
  "AutoNAT": {},
  "Pubsub": {
    "DisableSigning": false,
    "Router": ""
  },
  "Peering": {
    "Peers": null
  },
  "Reprovider": {
    "Interval": "12h",
    "Strategy": "{{ ipfs_reprovider_strategy | default('all') }}"
  },
  "Experimental": {
    "FilestoreEnabled": false,
    "Libp2pStreamMounting": false,
    "P2pHttpProxy": false,
    "ShardingEnabled": false,
    "StrategicProviding": false,
    "UrlstoreEnabled": false,
    "GraphsyncEnabled": false,
    "AcceleratedDHTClient": {{ ipfs_experimental_accelerated_dht_client | default(False) | lower }},
    "StrategicProviding": {{ ipfs_experimental_strategic_providing | default(False) | lower }}
  },
  "Plugins": {
    "Plugins": null
  },
  "Pinning": {
    "RemoteServices": null
  }
}
